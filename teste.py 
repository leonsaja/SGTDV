from django.db import migrations
from django.db import migrations, models


def transfer_diaria_to_reembolso_principal(apps, schema_editor):
    # Obtém o estado atual dos modelos
    Diaria = apps.get_model('despesas', 'Diaria')
    ReembolsoPrincipal = apps.get_model('despesas', 'ReembolsoPrincipal')
    Reembolso = apps.get_model('despesas', 'Reembolso')

    # Primeiro, garanta que cada Diaria tem um ReembolsoPrincipal.
    # Esta parte é crucial. Se o ReembolsoPrincipal não existir,
    # o item de Reembolso não terá a quem se associar.
    for diaria in Diaria.objects.all():
        # Cria o cabeçalho se ele ainda não existir.
        # Ajuste os 'defaults' conforme seus campos obrigatórios em ReembolsoPrincipal.
        ReembolsoPrincipal.objects.get_or_create(
            diaria=diaria,
            defaults={
                'status': diaria.status, 
                'criado_por': diaria.criado_por,
                'descricao_reembolso':diaria.descricao_reembolso,
                'data_ult_nota_reembolso':diaria.data_ult_nota_reembolso,
                'alterado_por':diaria.alterado_por,
            }
        )

    # Agora, transfere a chave de 'diaria' para 'reembolso_principal'
    for item_reembolso in Reembolso.objects.all():
        # Acessa o ReembolsoPrincipal através do campo diaria que ainda existe
        try:
            reem_principal = ReembolsoPrincipal.objects.get(diaria=item_reembolso.diaria)
            
            # ATRIBUI A CHAVE
            item_reembolso.reembolso_principal = reem_principal
            item_reembolso.save(update_fields=['reembolso_principal'])
        except ReembolsoPrincipal.DoesNotExist:
            # Lidar com casos onde um item de Reembolso está ligado a uma Diaria 
            # que não tem ReembolsoPrincipal (improvável após o loop acima, mas seguro)
            print(f"Alerta: Reembolso {item_reembolso.pk} não pôde ser mapeado para ReembolsoPrincipal.")
            pass




class Migration(migrations.Migration):

    dependencies = [
        ('despesas', '0005_auto_20251006_0003'),
    ]

    operations = [
        migrations.RunPython(transfer_diaria_to_reembolso_principal, migrations.RunPython.noop),
    ]
